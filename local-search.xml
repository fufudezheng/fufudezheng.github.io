<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>上海野生动物园</title>
    <link href="/2022/11/14/zooofSH/"/>
    <url>/2022/11/14/zooofSH/</url>
    
    <content type="html"><![CDATA[<p>​小白虎镇楼</p><p><img src="/2022/11/14/zooofSH/%E5%B0%8F%E7%99%BD%E8%99%8E.jpg" alt="小白虎"></p><p><img src="/2022/11/14/zooofSH/%E5%B0%8F%E7%99%BD%E8%99%8E1.jpg" alt="小白虎1"></p><p><img src="/2022/11/14/zooofSH/%E5%A4%A7%E8%B1%A1.jpg" alt="大象"></p><p><img src="/2022/11/14/zooofSH/%E7%86%8A%E7%8C%AB.jpg" alt="熊猫"></p><p><img src="/2022/11/14/zooofSH/%E6%96%B9%E4%BE%BF%E9%9D%A2%E7%9A%84%E5%B1%81%E8%82%A1.jpg" alt="方便面的屁股"></p><p><img src="/2022/11/14/zooofSH/%E7%9A%AE%E7%90%83.jpg" alt="皮球"></p><p><img src="/2022/11/14/zooofSH/%E6%B5%B7%E7%9B%97.jpg" alt="海盗"></p><p><img src="/2022/11/14/zooofSH/%E7%8B%90%E7%8C%B4%EF%BC%9F.jpg" alt="狐猴？"></p>]]></content>
    
    
    <categories>
      
      <category>所见</category>
      
      <category>上海</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>算法</title>
    <link href="/2022/11/14/algorithm/"/>
    <url>/2022/11/14/algorithm/</url>
    
    <content type="html"><![CDATA[<h1 id="多线程编程（windows-API）"><a href="#多线程编程（windows-API）" class="headerlink" title="多线程编程（windows API）"></a>多线程编程（windows API）</h1><ul><li><p>windows 分配计算资源的基本单位是进程  </p><p>1、进程是系统分配资源的最小单位。</p><p>2、线程是处理器调度的最小单位。</p><p>3、一个进程可以包含很多线程，且这些线程共享进程内的所有资源。</p></li><li><p>进程提供一个各种资源的容器，定义了一个地址空间作为基本的执行环境；线程是一个指令执行序列，可以直接访问进程中的资源。每个进程中至少有一个线程，线程在任一时刻必属于某个进程。</p></li><li><p>并行开发就是考虑在算法的设计过程中如何结合显卡等特点进行并行加速</p><p><img src="/2022/11/14/algorithm/image-20221114110819874.png" alt="image-20221114110819874"></p><ul><li>内核：真正的CPU物理核心</li></ul></li></ul><h2 id="windows-API"><a href="#windows-API" class="headerlink" title="windows API"></a>windows API</h2><ul><li><p>1.WaitForSingleObject（）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">DWORD WINAPI <span class="hljs-title">WaitForSingleObject</span><span class="hljs-params">( _In_ HANDLE hHandle, _In_ DWORD dwMilliseconds)</span></span>;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">_In_ HANDLE hHandle:是对象的句柄，可以是以下几种：</span><br><span class="hljs-comment">• Change notification</span><br><span class="hljs-comment">• Console input</span><br><span class="hljs-comment">• Event</span><br><span class="hljs-comment">• Memory resource notification</span><br><span class="hljs-comment">• Mutex</span><br><span class="hljs-comment">• Process</span><br><span class="hljs-comment">• Semaphore</span><br><span class="hljs-comment">• Thread</span><br><span class="hljs-comment">• Waitable time</span><br><span class="hljs-comment">_In_ DWORD dwMilliseconds:为等待时间，以毫秒为单位。</span><br><span class="hljs-comment">dwMilliseconds 有两个具有特殊意义的值：0 和 INFINITE。若为 0，则该函数立即返回；</span><br><span class="hljs-comment">若为 INFINITE，则线程一直被挂起，直到 hHandle 所指向的对象变为有信号状态时为止。</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure></li><li><p>2.WaitForMulitpleObjects()</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">DWORD WINAPI <span class="hljs-title">WaitForMultipleObjects</span><span class="hljs-params">( _In_ DWORD nCount, _In_ <span class="hljs-type">const</span> HANDLE</span></span><br><span class="hljs-params"><span class="hljs-function">*lpHandles, _In_ BOOL bWaitAll, _In_ DWORD dwMilliseconds )</span></span>;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">2.参数说明 </span><br><span class="hljs-comment">•  DWORD dwCount 为等待的内核对象个数,可以是 0 到</span><br><span class="hljs-comment">MAXIMUM_WAIT_OBJECTS（64）中的一个值。</span><br><span class="hljs-comment">• CONST HANDLE* phObjects 为一个存放被等待的内核对象句柄的数组</span><br><span class="hljs-comment">• BOOL bWaitAll 是否等到所有内核对象为已通知状态后才返回,如果为</span><br><span class="hljs-comment">TRUE，则只有当等待的所有内核对象为已通知状态时函数才返回，如果为 FALSE，</span><br><span class="hljs-comment">则只要一个内核对象为已通知状态，则该函数返回。</span><br><span class="hljs-comment">• DWORD dwMilliseconds 为等待时间,和 WaitForSingleObject 中的</span><br><span class="hljs-comment">dwMilliseconds 参数类似。</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure></li><li><p>线程相关函数用法、与框架</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//等待某一线程完成了特定的操作</span><br><span class="hljs-built_in">WaitForMultipleObjects</span>(MAX_THREADS, hThreads, TRUE, INFINITE); <span class="hljs-comment">//等待所有线程结束</span><br><span class="hljs-comment">//此时操作系统优先执行哪个线程是随机的</span><br><br></code></pre></td></tr></table></figure><ul><li><p>测试代码执行时间：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//------------测试执行时间框架----------</span><br><span class="hljs-comment">//原始方法用来测试代码RawADD()</span><br><span class="hljs-built_in">QueryPerformanceCounter</span>(&amp;start);<span class="hljs-comment">//start  </span><br><span class="hljs-built_in">RawADD</span>(); <span class="hljs-comment">//中间测试代码，单位为count</span><br><span class="hljs-built_in">QueryPerformanceCounter</span>(&amp;end);<span class="hljs-comment">//end</span><br>std::cout &lt;&lt; <span class="hljs-string">&quot;Time Consumed2:&quot;</span> &lt;&lt; (end.QuadPart - start.QuadPart) &lt;&lt; <span class="hljs-string">&quot;\tResult:&quot;</span> &lt;&lt; floatSum &lt;&lt; endl;<br><span class="hljs-comment">//-----------------end-----------------</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="线程调度实验课"><a href="#线程调度实验课" class="headerlink" title="线程调度实验课"></a>线程调度实验课</h3><ul><li><p>test1错误版本1：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MAX_THREADS 10</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> count = <span class="hljs-number">0</span>;<br><span class="hljs-function">DWORD WINAPI <span class="hljs-title">ThreadProc</span><span class="hljs-params">(LPVOID lpParameter)</span></span><br><span class="hljs-function"></span>&#123;<br>::count++;<br>cout &lt;&lt; ::count &lt;&lt; endl;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    std::cout &lt;&lt; <span class="hljs-string">&quot;Hello World!\n&quot;</span>;<br>HANDLE hThreads[MAX_THREADS];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; MAX_THREADS; i++)<br>&#123;<br>hThreads[i] = <span class="hljs-built_in">CreateThread</span>(<br><span class="hljs-literal">NULL</span>,<span class="hljs-comment">// default security attributes</span><br><span class="hljs-number">0</span>,<span class="hljs-comment">// use default stack size</span><br>ThreadProc,<span class="hljs-comment">// thread function</span><br><span class="hljs-number">0</span>,<span class="hljs-comment">// argument to thread function</span><br><span class="hljs-number">0</span>, <span class="hljs-comment">// use default creation flags.0 means the thread will be run at once  CREATE_SUSPENDED</span><br><span class="hljs-literal">NULL</span>);<br>&#125;<br>cout &lt;&lt; <span class="hljs-string">&quot;final count is:&quot;</span> &lt;&lt; ::count &lt;&lt; endl;<br>std::cout &lt;&lt; <span class="hljs-string">&quot;End!\n&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>test2错误版本2：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;windows.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MAX_THREADS 10</span><br>HANDLE hMutex;<br><span class="hljs-type">int</span> count = <span class="hljs-number">0</span>;<br><span class="hljs-function">DWORD WINAPI <span class="hljs-title">ThreadProc</span><span class="hljs-params">(LPVOID lpParameter)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">WaitForSingleObject</span>(hMutex, INFINITE);  <span class="hljs-comment">// 无限等待</span><br>::count++;<br>cout &lt;&lt; <span class="hljs-string">&quot;iD: &quot;</span> &lt;&lt; *(<span class="hljs-type">int</span>*)lpParameter &lt;&lt; <span class="hljs-string">&quot;:&quot;</span> &lt;&lt; ::count &lt;&lt; endl;<br><span class="hljs-comment">//cout &lt;&lt; ::count &lt;&lt; endl;//插入到count++之后，会怎么样?</span><br><span class="hljs-built_in">ReleaseMutex</span>(hMutex);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>std::cout &lt;&lt; <span class="hljs-string">&quot;Hello World!\n&quot;</span>;<br><span class="hljs-comment">// 创建 Mutex</span><br>hMutex = <span class="hljs-built_in">CreateMutex</span>(<br><span class="hljs-literal">NULL</span>,                       <span class="hljs-comment">// 默认安全属性</span><br>FALSE,                      <span class="hljs-comment">// 初始化为未被拥有</span><br><span class="hljs-literal">NULL</span>);                      <span class="hljs-comment">// 未命名</span><br><span class="hljs-keyword">if</span> (hMutex == <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;CreateMutex error: %d\n&quot;</span>, <span class="hljs-built_in">GetLastError</span>());<br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br><br>HANDLE hThreads[MAX_THREADS];<br><span class="hljs-type">int</span> a[MAX_THREADS];<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; MAX_THREADS; i++)<br>&#123;<br>a[i] = i;<br>hThreads[i] = <span class="hljs-built_in">CreateThread</span>(<br><span class="hljs-literal">NULL</span>,<span class="hljs-comment">// default security attributes</span><br><span class="hljs-number">0</span>,<span class="hljs-comment">// use default stack size</span><br>ThreadProc,<span class="hljs-comment">// thread function</span><br>&amp;a[i],<span class="hljs-comment">// argument to thread function</span><br><span class="hljs-number">0</span>, <span class="hljs-comment">// use default creation flags.0 means the thread will be run at once  CREATE_SUSPENDED</span><br><span class="hljs-literal">NULL</span>);<br>&#125;<br><span class="hljs-built_in">WaitForMultipleObjects</span>(MAX_THREADS, hThreads, TRUE, INFINITE); <span class="hljs-comment">//先去掉试试.另外，万一线程是个while，怎么同步？</span><br><span class="hljs-built_in">ReleaseMutex</span>(hMutex);<br>cout &lt;&lt; <span class="hljs-string">&quot;final count is:&quot;</span> &lt;&lt; ::count &lt;&lt; endl;<br>std::cout &lt;&lt; <span class="hljs-string">&quot;End!\n&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>test3正确版本：标准线程通信</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;windows.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MAX_THREADS 10</span><br>HANDLE hSemaphores[MAX_THREADS];<span class="hljs-comment">//信号量，保证不重入。等同于mutex</span><br><span class="hljs-type">int</span> ThreadID[MAX_THREADS];<br>HANDLE hMutex = <span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> count = <span class="hljs-number">0</span>;<br><span class="hljs-function">DWORD WINAPI <span class="hljs-title">ThreadProc</span><span class="hljs-params">(LPVOID lpParameter)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> who = *(<span class="hljs-type">int</span>*)lpParameter;<br><span class="hljs-comment">//while (1)</span><br><span class="hljs-comment">//&#123;</span><br><span class="hljs-built_in">WaitForSingleObject</span>(hMutex, INFINITE);<span class="hljs-comment">// 无限等待</span><br>::count++;<br><span class="hljs-built_in">ReleaseMutex</span>(hMutex);<br>cout &lt;&lt; ::count &lt;&lt; endl;<span class="hljs-comment">//插入到count++之后，会怎么样?</span><br><br><span class="hljs-built_in">ReleaseSemaphore</span>(hSemaphores[who], <span class="hljs-number">1</span>, <span class="hljs-literal">NULL</span>);<span class="hljs-comment">//释放信号量，信号量加1</span><br><span class="hljs-comment">//&#125;</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-function">DWORD <span class="hljs-title">RawADD</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">size_t</span> i = <span class="hljs-number">0</span>; i &lt; MAX_THREADS; i++)<br>&#123;<br>::count++;<br>cout &lt;&lt; ::count &lt;&lt; endl;<span class="hljs-comment">//插入到count++之后，会怎么样?</span><br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>std::cout &lt;&lt; <span class="hljs-string">&quot;Hello World!\n&quot;</span>;<br><span class="hljs-comment">// 创建 Mutex</span><br>hMutex = <span class="hljs-built_in">CreateMutex</span>(<br><span class="hljs-literal">NULL</span>,                       <span class="hljs-comment">// 默认安全属性</span><br>FALSE,                      <span class="hljs-comment">// 初始化为未被拥有</span><br><span class="hljs-literal">NULL</span>);                      <span class="hljs-comment">// 未命名</span><br><span class="hljs-keyword">if</span> (hMutex == <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;CreateMutex error: %d\n&quot;</span>, <span class="hljs-built_in">GetLastError</span>());<br>&#125;<br><br>LARGE_INTEGER start, end;<br>    <span class="hljs-type">double</span> floatSum = <span class="hljs-number">0.0</span>;<br>    <span class="hljs-comment">//------------测试执行时间框架----------</span><br><span class="hljs-comment">//原始方法用来测试代码RawADD()</span><br><span class="hljs-built_in">QueryPerformanceCounter</span>(&amp;start);<span class="hljs-comment">//start  </span><br><span class="hljs-built_in">RawADD</span>(); <span class="hljs-comment">//中间测试代码，单位为count</span><br><span class="hljs-built_in">QueryPerformanceCounter</span>(&amp;end);<span class="hljs-comment">//end</span><br><span class="hljs-comment">//-----------------end-----------------</span><br>std::cout &lt;&lt; <span class="hljs-string">&quot;Time Consumed1:&quot;</span> &lt;&lt; (end.QuadPart - start.QuadPart) &lt;&lt; <span class="hljs-string">&quot;\tResult:&quot;</span> &lt;&lt; floatSum &lt;&lt; endl;<br>cout &lt;&lt; <span class="hljs-string">&quot;final count1 is:&quot;</span> &lt;&lt; ::count &lt;&lt; endl;<br><br>::count = <span class="hljs-number">0</span>;<span class="hljs-comment">//复位</span><br><br>HANDLE hThreads[MAX_THREADS];<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; MAX_THREADS; i++)<br>&#123;<br>hSemaphores[i] = <span class="hljs-built_in">CreateSemaphore</span>(<span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-literal">NULL</span>);<span class="hljs-comment">//CreateEvent(NULL,TRUE,FALSE)等价？</span><br>ThreadID[i] = i;<br>hThreads[i] = <span class="hljs-built_in">CreateThread</span>(<br><span class="hljs-literal">NULL</span>,<span class="hljs-comment">// default security attributes</span><br><span class="hljs-number">0</span>,<span class="hljs-comment">// use default stack size</span><br>ThreadProc,<span class="hljs-comment">// thread function</span><br>&amp;ThreadID[i],<span class="hljs-comment">// argument to thread function</span><br>CREATE_SUSPENDED, <span class="hljs-comment">// use default creation flags.0 means the thread will be run at once  CREATE_SUSPENDED</span><br><span class="hljs-literal">NULL</span>);<br>&#125;<br><span class="hljs-comment">//开始执行线程</span><br><span class="hljs-built_in">QueryPerformanceCounter</span>(&amp;start);<span class="hljs-comment">//start  </span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; MAX_THREADS; i++)<br>&#123;<br><span class="hljs-built_in">ResumeThread</span>(hThreads[i]);<br>&#125;<br><span class="hljs-built_in">WaitForMultipleObjects</span>(MAX_THREADS, hSemaphores, TRUE, INFINITE); <span class="hljs-comment">//和等待线程结束的区别是？万一进程是个死循环呢。给进程直接加while 1会出问题吗？怎么避免</span><br>    <span class="hljs-comment">//ans:等到所有线程满足信号量hSemaphores，才继续下一步,当线程里while1</span><br><span class="hljs-built_in">QueryPerformanceCounter</span>(&amp;end);<span class="hljs-comment">//start  </span><br>std::cout &lt;&lt; <span class="hljs-string">&quot;Time Consumed2:&quot;</span> &lt;&lt; (end.QuadPart - start.QuadPart) &lt;&lt; <span class="hljs-string">&quot;\tResult:&quot;</span> &lt;&lt; floatSum &lt;&lt; endl;<br><br><span class="hljs-built_in">ReleaseMutex</span>(hMutex);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; MAX_THREADS; i++)<br>&#123;<br><span class="hljs-built_in">CloseHandle</span>(hThreads[i]);<br><span class="hljs-built_in">CloseHandle</span>(hSemaphores[i]);<br>&#125;<br>cout &lt;&lt; <span class="hljs-string">&quot;final count2 is:&quot;</span> &lt;&lt; ::count &lt;&lt; endl;<br>std::cout &lt;&lt; <span class="hljs-string">&quot;let me alone!\n&quot;</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>final最终版本</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// MultiThreadsTest.cpp : 此文件包含 &quot;main&quot; 函数。程序执行将在此处开始并结束。</span><br><span class="hljs-comment">//final</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;windows.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-comment">//超过64个waitfor会出错</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MAX_THREADS 64</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SUBDATANUM 1024*1024</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DATANUM (SUBDATANUM * MAX_THREADS)</span><br><br><span class="hljs-type">int</span> rawIntData[DATANUM];<span class="hljs-comment">//shared by son-threads 64M</span><br><span class="hljs-type">double</span> rawFloatData[DATANUM];<br><br><span class="hljs-type">int</span> ThreadID[MAX_THREADS];<br><span class="hljs-type">double</span> floatResults[MAX_THREADS];<span class="hljs-comment">//每个线程的中间结果</span><br><br>HANDLE hSemaphores[MAX_THREADS];<span class="hljs-comment">//信号量，保证不重入。等同于mutex</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> region 为了编译，此处需要调用你们的代码</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 求rawIntData每个元素的和</span><br><span class="hljs-comment"> * @rawIntData 数据数组</span><br><span class="hljs-comment"> * @rawIntData 数据长度</span><br><span class="hljs-comment"> * @result 结果</span><br><span class="hljs-comment"> * @return &#123;返回值类型&#125; 返回值说明</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">NewIntAdd</span><span class="hljs-params">(<span class="hljs-type">int</span> rawIntData[], <span class="hljs-type">int</span> dataNum, <span class="hljs-type">int</span>&amp; result)</span></span><br><span class="hljs-function"></span>&#123;<br>result = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">size_t</span> i = <span class="hljs-number">0</span>; i &lt; dataNum; i++)<br>&#123;<br>result += rawIntData[i];<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 求rawIntData每个元素的和</span><br><span class="hljs-comment"> * @rawIntData 数据数组</span><br><span class="hljs-comment"> * @rawIntData 数据长度</span><br><span class="hljs-comment"> * @result 结果</span><br><span class="hljs-comment"> * @return &#123;返回值类型&#125; 返回值说明</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">NewFloatAdd</span><span class="hljs-params">(<span class="hljs-type">double</span> rawFloatData[], <span class="hljs-type">int</span> dataNum, <span class="hljs-type">double</span>&amp; result)</span></span><br><span class="hljs-function"></span>&#123;<br>result = <span class="hljs-number">0.0f</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">size_t</span> i = <span class="hljs-number">0</span>; i &lt; dataNum; i++)<br>&#123;<br>result += <span class="hljs-built_in">sin</span>(rawFloatData[i]);<span class="hljs-comment">//有意浪费时间，代码不严格</span><br>&#125;<br><br><span class="hljs-comment">//int nb_iters = dataNum / 16;</span><br><span class="hljs-comment">//__m512* ptr = (__m512*)a;</span><br><span class="hljs-comment">//for (int i = 0; i &lt; nb_iters; ++i, ++ptr, a += 16)</span><br><span class="hljs-comment">//_mm512_store_ps(a, _mm512_sin_ps(*ptr));</span><br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> endregion</span><br><br><span class="hljs-function">DWORD WINAPI <span class="hljs-title">ThreadProc</span><span class="hljs-params">(LPVOID lpParameter)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> who = *(<span class="hljs-type">int</span>*)lpParameter;<br><span class="hljs-comment">//cout &lt;&lt; who &lt;&lt; endl;</span><br><span class="hljs-type">int</span> startIndex = who * SUBDATANUM;<br><span class="hljs-type">int</span> endIndex = startIndex + SUBDATANUM;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">size_t</span> i = startIndex; i &lt; endIndex; i++)<span class="hljs-comment">//每一段数据处理串行处理（线程内）</span><br>&#123;<br>floatResults[who] += <span class="hljs-built_in">sin</span>(rawFloatData[i]);<span class="hljs-comment">//</span><br>&#125;<br><span class="hljs-built_in">ReleaseSemaphore</span>(hSemaphores[who], <span class="hljs-number">1</span>, <span class="hljs-literal">NULL</span>);<span class="hljs-comment">//释放信号量，信号量加1 </span><br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>std::cout &lt;&lt; <span class="hljs-string">&quot;Hello World!\n&quot;</span>;<br>LARGE_INTEGER start, end;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">size_t</span> i = <span class="hljs-number">0</span>; i &lt; DATANUM; i++)<span class="hljs-comment">//数据初始化</span><br>&#123;<br>rawIntData[i] = i % <span class="hljs-number">100</span>;<br>rawFloatData[i] = i % <span class="hljs-number">100</span>;<br>&#125;<br><br><span class="hljs-comment">//method 1st</span><br><span class="hljs-comment">//原始方法</span><br><span class="hljs-type">double</span> floatSum = <span class="hljs-number">0.0</span>;<br><span class="hljs-built_in">QueryPerformanceCounter</span>(&amp;start);<span class="hljs-comment">//start  </span><br><span class="hljs-built_in">NewFloatAdd</span>(rawFloatData, DATANUM, floatSum);<br><span class="hljs-built_in">QueryPerformanceCounter</span>(&amp;end);<span class="hljs-comment">//start  </span><br>std::cout &lt;&lt; <span class="hljs-string">&quot;Time Consumed2:&quot;</span> &lt;&lt; (end.QuadPart - start.QuadPart) &lt;&lt; <span class="hljs-string">&quot;\tResult:&quot;</span> &lt;&lt; floatSum &lt;&lt; endl;<br><br><span class="hljs-comment">//#pragma omp parallel for</span><br><span class="hljs-comment">//for (size_t i = 0; i &lt; MAX_THREADS; i++)</span><br><span class="hljs-comment">//&#123;</span><br><span class="hljs-comment">//ThreadProc(&amp;i);</span><br><span class="hljs-comment">//&#125;</span><br><span class="hljs-comment">////64finished</span><br><span class="hljs-comment">////收割</span><br><span class="hljs-comment">//floatSum = 0.0;</span><br><span class="hljs-comment">//for (int i = 0; i &lt; MAX_THREADS; i++)</span><br><span class="hljs-comment">//floatSum += floatResults[i];</span><br><br><br><span class="hljs-comment">//多线程</span><br>HANDLE hThreads[MAX_THREADS];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; MAX_THREADS; i++)<br>&#123;<br>hSemaphores[i] = <span class="hljs-built_in">CreateSemaphore</span>(<span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-literal">NULL</span>);<span class="hljs-comment">//CreateEvent(NULL,TRUE,FALSE)等价？</span><br>ThreadID[i] = i;<br>floatResults[i] = <span class="hljs-number">0</span>;<br><br>hThreads[i] = <span class="hljs-built_in">CreateThread</span>(<br><span class="hljs-literal">NULL</span>,<span class="hljs-comment">// default security attributes</span><br><span class="hljs-number">0</span>,<span class="hljs-comment">// use default stack size</span><br>ThreadProc,<span class="hljs-comment">// thread function</span><br>&amp;ThreadID[i],<span class="hljs-comment">// argument to thread function</span><br>CREATE_SUSPENDED, <span class="hljs-comment">// use default creation flags.0 means the thread will be run at once  CREATE_SUSPENDED</span><br><span class="hljs-literal">NULL</span>);<br>&#125;<br><span class="hljs-comment">//开始执行线程</span><br><span class="hljs-built_in">QueryPerformanceCounter</span>(&amp;start);<span class="hljs-comment">//start  </span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; MAX_THREADS; i++)<br>&#123;<br><span class="hljs-built_in">ResumeThread</span>(hThreads[i]);<br>&#125;<br><span class="hljs-comment">//WaitForMultipleObjects的等待对象数，不超过 AXIMUM_WAIT_OBJECTS ==64</span><br><span class="hljs-built_in">WaitForMultipleObjects</span>(MAX_THREADS, hSemaphores, TRUE, INFINITE); <span class="hljs-comment">//和等待线程结束的区别是？万一进程是个死循环呢。给进程直接加while 1会出问题吗？怎么避免</span><br><span class="hljs-comment">//Sleep(1000);</span><br><span class="hljs-comment">//收割</span><br>floatSum = <span class="hljs-number">0.0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; MAX_THREADS; i++)<br>floatSum += floatResults[i];<br><br><span class="hljs-built_in">QueryPerformanceCounter</span>(&amp;end);<span class="hljs-comment">//start </span><br><br>  <span class="hljs-comment">// Close all thread handles upon completion.</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; MAX_THREADS; i++)<br>&#123;<br><span class="hljs-built_in">CloseHandle</span>(hThreads[i]);<br><span class="hljs-built_in">CloseHandle</span>(hSemaphores[i]);<br>&#125;<br><br>std::cout &lt;&lt; <span class="hljs-string">&quot;Time Consumed3:&quot;</span> &lt;&lt; (end.QuadPart - start.QuadPart) &lt;&lt; <span class="hljs-string">&quot;\tResult:&quot;</span> &lt;&lt; floatSum &lt;&lt; endl;<br>std::cout &lt;&lt; <span class="hljs-string">&quot;End!\n&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><ul><li></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>所学</category>
      
      <category>课程</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>同济校园</title>
    <link href="/2022/11/14/tongji/"/>
    <url>/2022/11/14/tongji/</url>
    
    <content type="html"><![CDATA[<p><img src="/2022/11/14/tongji/%E5%9B%BD%E7%AB%8B%E6%9F%B1.jpg" alt="国立柱"></p><p><img src="/2022/11/14/tongji/%E5%9B%BD%E7%AB%8B%E6%9F%B11.jpg" alt="国立柱1"></p><p><img src="/2022/11/14/tongji/%E5%9B%BE%E4%B9%A6%E9%A6%86.jpg" alt="图书馆"></p><p><img src="/2022/11/14/tongji/%E5%9B%BE%E4%B9%A6%E9%A6%86%E5%A4%96.jpg" alt="图书馆外"></p><p><img src="/2022/11/14/tongji/%E8%8D%89%E5%9D%AA.jpg" alt="草坪"></p><p><img src="/2022/11/14/tongji/%E8%8D%89%E5%9D%AA1.jpg" alt="草坪1"></p><p><img src="/2022/11/14/tongji/%E4%B8%81%E8%BE%BE%E5%B0%94.jpg" alt="丁达尔"></p><p><img src="/2022/11/14/tongji/%E5%9B%BE%E4%B9%A6%E9%A6%86%E7%9A%84%E7%8C%AB.jpg" alt="图书馆的猫"></p><p><img src="/2022/11/14/tongji/%E6%99%9A%E9%9C%9E1.jpg" alt="晚霞1"></p><p><img src="/2022/11/14/tongji/%E6%95%99%E5%AD%A6%E6%A5%BC.jpg" alt="教学楼"></p><p><img src="/2022/11/14/tongji/%E8%80%81%E6%AF%8D%E9%B8%A1.jpg" alt="老母鸡"></p><p><img src="/2022/11/14/tongji/%E6%93%8D%E5%9C%BA.jpg" alt="操场"></p><p><img src="/2022/11/14/tongji/%E5%8D%97%E6%A0%A1%E5%8C%BA%E7%9A%84%E7%88%AC%E5%B1%B1%E8%99%8E.jpg" alt="南校区的爬山虎"></p><p><img src="/2022/11/14/tongji/%E5%9B%9B%E5%B9%B3%E7%9A%84%E7%A7%8B.jpg" alt="四平的秋"></p><p><img src="/2022/11/14/tongji/%E5%9B%9B%E5%B9%B3%E7%9A%84%E7%A7%8B1.jpg" alt="四平的秋1"></p><p><img src="/2022/11/14/tongji/%E8%80%81%E6%AF%8D%E9%B8%A1%E4%BB%AC.jpg" alt="老母鸡们"></p><p><img src="/2022/11/14/tongji/%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%A7%81%E5%86%AC%E5%A4%A9%E4%B8%8B%E9%9B%A8.jpg" alt="第一次见冬天下雨"></p><p><img src="/2022/11/14/tongji/%E6%A8%B1%E8%8A%B11.jpg" alt="樱花1"></p><p><img src="/2022/11/14/tongji/%E6%A8%B1%E8%8A%B12.jpg" alt="樱花2"></p><p><img src="/2022/11/14/tongji/%E6%A8%B1%E8%8A%B13.jpg" alt="樱花3"></p><p><img src="/2022/11/14/tongji/%E6%A8%B1%E8%8A%B14.jpg" alt="樱花4"></p><p><img src="/2022/11/14/tongji/%E6%A8%B1%E8%8A%B15.jpg" alt="樱花5"></p><p><img src="/2022/11/14/tongji/%E6%A8%B1%E8%8A%B16.jpg" alt="樱花6"></p><p><img src="/2022/11/14/tongji/%E6%A1%83%E8%8A%B1.jpg" alt="桃花"></p><p><img src="/2022/11/14/tongji/%E9%BB%84%E8%8A%B1.jpg" alt="黄花"></p><p><img src="/2022/11/14/tongji/%E4%B8%8D%E7%9F%A5%E9%81%93%E4%BB%80%E4%B9%88%E8%8A%B1.jpg" alt="不知道什么花"></p><p><img src="/2022/11/14/tongji/%E5%AD%A6%E9%95%BF.jpg" alt="学长"></p><p><img src="/2022/11/14/tongji/%E6%87%82%E5%BE%97%E9%83%BD%E6%87%82.jpg" alt="懂得都懂"></p><p><img src="/2022/11/14/tongji/%E5%9B%BE%E4%B9%A6%E9%A6%86%E5%A4%96-1668360643645-13.jpg" alt="图书馆外"></p><p><img src="/2022/11/14/tongji/%E5%9B%BE%E4%B9%A6%E9%A6%86%E5%A4%962.jpg" alt="图书馆外2"></p><p><img src="/2022/11/14/tongji/%E9%9B%AA.jpg" alt="雪"></p><p><img src="/2022/11/14/tongji/%E9%9B%AA1.jpg" alt="雪1"></p><p><img src="/2022/11/14/tongji/%E8%B7%AF%E7%81%AF.jpg" alt="路灯"></p><p><img src="/2022/11/14/tongji/%E6%99%9A%E9%9C%9E2.jpg" alt="晚霞2"></p><p><img src="/2022/11/14/tongji/%E5%B7%A5%E8%AE%AD%E9%80%9A%E5%AE%B5%E5%90%8E%E7%9A%84%E6%97%A5%E5%87%BA.jpg" alt="工训通宵后的日出"></p><p><img src="/2022/11/14/tongji/%E6%99%9A%E9%9C%9E3.jpg" alt="晚霞3"></p><p><img src="/2022/11/14/tongji/%E6%99%9A%E9%9C%9E4.jpg" alt="晚霞4"></p><p><img src="/2022/11/14/tongji/%E6%99%9A%E9%9C%9E5.jpg" alt="晚霞5"></p><p><img src="/2022/11/14/tongji/%E6%99%9A%E9%9C%9E6.jpg" alt="晚霞6"></p><p><img src="/2022/11/14/tongji/%E5%92%8Cgy%E5%96%9D%E5%AE%8C%E9%85%92%E5%90%8E%E5%9B%9E%E5%AE%BF%E8%88%8D.jpg" alt="和gy喝完酒后回宿舍"></p><p><img src="/2022/11/14/tongji/%E5%9C%B0%E9%93%81%E7%AB%99%E7%9C%8B%E5%88%B0%E7%9A%84.jpg" alt="地铁站看到的"></p><p><img src="/2022/11/14/tongji/%E6%9C%88.jpg" alt="月"></p>]]></content>
    
    
    <categories>
      
      <category>所见</category>
      
      <category>小破济</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>云南之行</title>
    <link href="/2022/11/13/biye/"/>
    <url>/2022/11/13/biye/</url>
    
    <content type="html"><![CDATA[<ul><li>距离19年毕业已有3年，很多记忆已不是很清晰且当时拍照技术确实挺垃圾的，所以只能选择有代表性部分。也提醒自己养成记录生活的习惯</li></ul><h1 id="没有记录，就没有发生"><a href="#没有记录，就没有发生" class="headerlink" title="没有记录，就没有发生"></a>没有记录，就没有发生</h1><h1 id="第一站洛阳"><a href="#第一站洛阳" class="headerlink" title="第一站洛阳"></a>第一站洛阳</h1><ul><li>第一次去南方，蒸笼一样的天气让我直接中暑，感受到了南方的闷热</li></ul><p><img src="/2022/11/13/biye/%E9%BE%99%E9%97%A8.jpg" alt="龙门"></p><p><img src="/2022/11/13/biye/%E4%BD%9B%E5%83%8F.jpg" alt="佛像"></p><h1 id="昆明"><a href="#昆明" class="headerlink" title="昆明"></a>昆明</h1><h2 id="石林"><a href="#石林" class="headerlink" title="石林"></a>石林</h2><p><img src="/2022/11/13/biye/%E7%9F%B3%E6%9E%97.jpg" alt="石林"></p><h2 id="溶洞"><a href="#溶洞" class="headerlink" title="溶洞"></a>溶洞</h2><p><img src="/2022/11/13/biye/%E7%9F%B3%E6%9E%971.jpg" alt="石林1"></p><p><img src="/2022/11/13/biye/%E7%9F%B3%E6%9E%973.jpg"></p><p><img src="/2022/11/13/biye/%E5%9C%B0%E4%B8%8B%E6%9A%97%E6%B5%81.jpg" alt="地下暗流"></p><p><img src="/2022/11/13/biye/%E5%9C%B0%E4%B8%8B.jpg" alt="地下"></p><h2 id="滇池"><a href="#滇池" class="headerlink" title="滇池"></a>滇池</h2><p>去了滇池，水是墨绿色很漂亮</p><p><img src="/2022/11/13/biye/%E6%BB%87%E6%B1%A0.jpg" alt="滇池"></p><h1 id="西双版纳"><a href="#西双版纳" class="headerlink" title="西双版纳"></a>西双版纳</h1><p>​坐缆车进入了热带雨林</p><p><img src="/2022/11/13/biye/%E7%BC%86%E8%BD%A6.jpg" alt="缆车"></p><p><img src="/2022/11/13/biye/%E7%BC%86%E8%BD%A6-1668356142357-11.jpg" alt="缆车"></p><p><img src="/2022/11/13/biye/%E9%9B%A8%E6%9E%97.jpg" alt="雨林"></p><p>建筑风格都很接近东南亚</p><p><img src="/2022/11/13/biye/%E5%A4%A7%E9%87%91%E5%A1%94.jpg" alt="大金塔"></p><h1 id="丽江"><a href="#丽江" class="headerlink" title="丽江"></a>丽江</h1><h2 id="玉龙雪山"><a href="#玉龙雪山" class="headerlink" title="玉龙雪山"></a>玉龙雪山</h2><p>​刚好当天下雨，雾茫茫的一片，虽然也别有一种感觉，但是终归还是留了点小遗憾</p><p><img src="/2022/11/13/biye/%E7%8E%89%E9%BE%99%E9%9B%AA%E5%B1%B1.jpg" alt="玉龙雪山"></p><p><img src="/2022/11/13/biye/%E7%8E%89%E9%BE%99%E9%9B%AA%E5%B1%B11.jpg" alt="玉龙雪山1"></p><p>蓝月谷，据说晴天时候是天蓝色的很漂亮</p><p><img src="/2022/11/13/biye/%E8%93%9D%E6%9C%88%E8%B0%B7.jpg" alt="蓝月谷"></p><p>还去了丽江古镇，但是好像很多照片流失了，就再留个遗憾吧…..</p><h2 id="香格里拉"><a href="#香格里拉" class="headerlink" title="香格里拉"></a>香格里拉</h2><p>​自驾前往香格里拉，离天堂最近的地方</p><p><img src="/2022/11/13/biye/%E6%B2%BF%E9%80%94.jpg" alt="沿途"></p><p><img src="/2022/11/13/biye/%E5%A4%A9%E6%B1%A0.jpg" alt="天池"></p><h1 id="向西去大理！"><a href="#向西去大理！" class="headerlink" title="向西去大理！"></a>向西去大理！</h1><p><img src="/2022/11/13/biye/%E8%8B%8D%E5%B1%B1.jpg" alt="苍山"></p><p><img src="/2022/11/13/biye/%E8%B2%8C%E4%BC%BC%E5%8F%AB%E4%BA%94%E5%8F%A0%E6%B3%89.jpg" alt="貌似叫五叠泉"></p><p>​洱海洱海，环湖一周，很喜欢洱海，给人一种说不出的平静感，相对于丽江古城浓重的商业气息，更喜欢大理的平静</p><p><img src="/2022/11/13/biye/%E6%B4%B1%E6%B5%B7.jpg" alt="洱海"></p><p><img src="/2022/11/13/biye/%E6%B4%B1%E6%B5%B71.jpg" alt="洱海1"></p><p><img src="/2022/11/13/biye/%E6%B4%B1%E6%B5%B72.jpg" alt="洱海2"></p><h1 id="西安一归途"><a href="#西安一归途" class="headerlink" title="西安一归途"></a>西安一归途</h1><p><img src="/2022/11/13/biye/%E8%A5%BF%E5%AE%89%E9%92%9F%E6%A5%BC.jpg" alt="西安钟楼"></p><p><img src="/2022/11/13/biye/%E9%81%97%E8%BF%B9.jpg" alt="遗迹"></p><h1 id="一生之敌-鱼腥草"><a href="#一生之敌-鱼腥草" class="headerlink" title="一生之敌-鱼腥草"></a>一生之敌-鱼腥草</h1><p>​遇到了一生之敌，鱼腥草</p><p><img src="/2022/11/13/biye/%E9%81%87%E5%88%B0%E4%BA%86%E4%B8%80%E7%94%9F%E4%B9%8B%E6%95%8C.jpg" alt="遇到了一生之敌"></p><h1 id="摄影与记录的意义"><a href="#摄影与记录的意义" class="headerlink" title="摄影与记录的意义"></a>摄影与记录的意义</h1><p>​19年的毕业旅行是很精彩的一次旅行，跟着舅舅和哥走遍了云南大多数地方，可能也是因为行程有点匆忙，很多地方只是走马观花的看了看。回头翻起来照片其实所剩无几，甚至很多照片都不知道是哪里，也自然看起来就没有了当初那样的新奇漂亮。</p><p>​很多照片都拍的不怎么样，忽然明白摄影或者说拍照记录（摄影太高大上了，哈哈）除了留下照片本身之外，更多的是给我一个看待世界的美的方式、发现美的能力，回看很多当时的照片我心里想就这还拍个照?景色当然是美的，但是如果没有去发掘美、欣赏美的能力，自然拍到的照片就平平无奇。</p><p>​我觉得与技巧无关，有的人对摄影一窍不通但是他知道什么是美的，所以拿着手机随手一拍，哪怕手机都端不平，照片也是美的、让人舒服的。缺少了发现美的主题的能力，再多的技巧，再好的器材都是舍本逐末。</p><p>​而记录在当时看起来好像是繁琐的，甚至是没必要的，但是多年后回看，其实很多记忆都已经模糊不清，甚至早已遗忘。所以勇敢的记录吧，生活本来就值得记录。</p><p>​自勉</p>]]></content>
    
    
    <categories>
      
      <category>所见</category>
      
      <category>2019 云南之行</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>电机与拖动</title>
    <link href="/2022/11/13/motor/"/>
    <url>/2022/11/13/motor/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="1磁路"><a href="#1磁路" class="headerlink" title="1磁路"></a>1磁路</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><ul><li><p>一些简单的磁路物理知识，记住磁路和电路的类比方式去理解<br>$$<br>B&#x3D; \mu H\<br>\oint Hdl&#x3D;\sum Ni<br>$$</p></li><li></li><li><p>磁路基本定理</p><ul><li><p>$$<br>F&#x3D;Ni&#x3D;\Phi R_m&#x3D;\Phi&#x2F; \Lambda\<br>R_m&#x3D;l&#x2F;(\mu A):磁阻，\Lambda:磁导<br>$$</p><p>$$ \Phi 类似电路里的i，在一个磁路里一般认为 \Phi 是相同的，但是不同的材料其磁阻不同,导致有不同的磁动势$$</p></li><li><p>磁路第一定律：穿过闭合面$$ \sum \Phi &#x3D;0$$</p></li><li><p>磁路第二定律：一段磁路上的总磁动势可以由各段累加计算$$ \sum H_il_i$$</p></li></ul></li><li><p>铁磁材料及特性：</p><p><img src="/2022/11/13/motor/image-20221113182156873.png" alt="image-20221113182156873"></p><p>软磁体：磁滞曲线比较窄，磁导率高</p><p>硬磁体：磁滞曲线宽，常做永磁体</p><p><img src="/2022/11/13/motor/image-20221113182209053.png" alt="image-20221113182209053"></p><p>除了在空气中，磁化曲线都是非线性的</p></li><li><p>磁损耗：</p><ul><li><p>磁滞损耗：$$p_h&#x3D;C_hfB_m^nV$$</p><p>交变磁场中，磁畴反复被磁化而互相摩擦，产生热量</p></li><li><p>涡流损耗：$$ p_e&#x3D;Ce\Delta^2f^2B_m^2V$$</p><p>磁通变化&gt;磁动势&gt;环流&gt;产生热量</p></li><li><p>相加为铁心损耗P_Fe</p><p>$$ P_{Fe}&#x3D;C_{Fe}f^{1.3}B_m^2G$$</p></li></ul></li></ul><h2 id="直流磁路的计算"><a href="#直流磁路的计算" class="headerlink" title="直流磁路的计算"></a>直流磁路的计算</h2><ul><li>本身比较简单，运用两个磁路定律，类似电路计算</li><li>注意气隙有一个气隙效应，计算时长宽各加$$ \delta$$即可</li></ul><h1 id="2直流电机"><a href="#2直流电机" class="headerlink" title="2直流电机"></a>2直流电机</h1>]]></content>
    
    
    <categories>
      
      <category>所学</category>
      
      <category>课程</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>桂林山水甲天下，阳朔山水甲桂林</title>
    <link href="/2022/11/13/guiling/"/>
    <url>/2022/11/13/guiling/</url>
    
    <content type="html"><![CDATA[<h1 id="桂林山水"><a href="#桂林山水" class="headerlink" title="桂林山水"></a>桂林山水</h1><p>住的地方一出门就是著名的两江四湖，来来回回转悠了一天，看了好多次日月双塔</p><p><img src="/2022/11/13/guiling/%E6%97%A5%E6%9C%88%E5%8F%8C%E5%A1%94.jpg" alt="日月双塔"></p><p><img src="/2022/11/13/guiling/%E6%97%A5%E6%9C%88%E5%8F%8C%E5%A1%94%E9%BB%84%E6%98%8F.jpg" alt="日月双塔黄昏"></p><p><img src="/2022/11/13/guiling/%E6%97%A5%E6%9C%88%E5%A1%94%E5%A4%9C%E6%99%AF.jpg" alt="日月塔夜景"></p><p>之后去了靖江王府，广西师范大学竟然就在里面，又是别人家的学校，这校门够气派</p><p><img src="/2022/11/13/guiling/%E9%9D%96%E6%B1%9F%E7%8E%8B%E5%BA%9C.jpg" alt="靖江王府"></p><p><img src="/2022/11/13/guiling/%E8%8A%B1%E4%BC%9E.jpg" alt="花伞"></p><p>广西地形复杂多山，就连城市里冷不丁都会突起一座小山</p><p><img src="/2022/11/13/guiling/%E9%9A%8F%E5%A4%84%E5%8F%AF%E8%A7%81%E7%9A%84%E5%B0%8F%E5%B1%B1.jpg" alt="随处可见的小山"></p><h1 id="漓江and兴坪古镇"><a href="#漓江and兴坪古镇" class="headerlink" title="漓江and兴坪古镇"></a>漓江and兴坪古镇</h1><p>之后从漓江坐船去阳朔，排了很久的队，一起拼船的一家人很好，小女孩特别可爱，这个大哥上辈子估计和我一起拯救过世界吧</p><p><img src="/2022/11/13/guiling/%E6%8B%BC%E8%88%B9.jpg" alt="拼船"></p><p>漓江上真正见识到了桂林山水甲天下，仿佛置身画中，可惜相机拍不出当时的感受，真的太惊艳了</p><p><img src="/2022/11/13/guiling/%E6%BC%93%E6%B1%9F1.jpg" alt="漓江1"></p><p><img src="/2022/11/13/guiling/%E4%B9%9D%E9%A9%AC%E7%94%BB%E5%B1%B1.jpg" alt="九马画山"></p><p><img src="/2022/11/13/guiling/%E4%B9%9D%E9%A9%AC%E7%94%BB%E5%B1%B11.jpg" alt="大鹏展翅"></p><p>有很多奇形怪状的山，每座山都有着各种各样的故事</p><p><img src="/2022/11/13/guiling/%E5%A4%A7%E9%B9%8F%E5%B1%95%E7%BF%85-1668309488976-13.jpg" alt="大鹏展翅"></p><p><img src="/2022/11/13/guiling/%E5%A5%87%E5%B1%B1.jpg" alt="奇山"></p><p>傍晚成功到达兴坪古镇并且错过了末班车。。。。</p><p><img src="/2022/11/13/guiling/%E5%85%B4%E5%9D%AA%E5%8F%A4%E9%95%87.jpg" alt="兴坪古镇"></p><p><img src="/2022/11/13/guiling/%E5%85%B4%E5%9D%AA%E5%8F%A4%E9%95%871.jpg" alt="兴坪古镇1"></p><h1 id="相公山"><a href="#相公山" class="headerlink" title="相公山"></a>相公山</h1><p>四点钟就起床去相公山看日出</p><p><img src="/2022/11/13/guiling/%E5%9B%9B%E7%82%B9%E5%87%BA%E5%8F%91.jpg" alt="四点出发"></p><p>清晨的水墨画</p><p><img src="/2022/11/13/guiling/%E7%9B%B8%E5%85%AC%E5%B1%B12.jpg" alt="相公山2"></p><p><img src="/2022/11/13/guiling/%E7%9B%B8%E5%85%AC%E5%B1%B13.jpg" alt="相公山3"></p><p><img src="/2022/11/13/guiling/%E7%9B%B8%E5%85%AC%E5%B1%B11.jpg" alt="相公山1"></p><p>前一天下了大暴雨，冲起很多泥沙，青色的江水变成了金色</p><p><img src="/2022/11/13/guiling/%E6%97%A5%E5%87%BA.jpg" alt="日出"></p><p><img src="/2022/11/13/guiling/%E6%97%A5%E5%87%BA2.jpg" alt="日出2"></p><p>​可惜下了大雨，没能去遇龙河体验下竹筏漂流，留个遗憾下次来补上</p><p>​住在了阳朔西街把各种街角逛了个遍，虽然商业气息有点重，但是当一直住在这里还是能看到很多生活的气息</p><p><img src="/2022/11/13/guiling/%E9%98%B3%E6%9C%94%E8%A5%BF%E8%A1%97.jpg" alt="阳朔西街"></p><p>左手一只鸡，右手一只鸭，身后还背着个胖娃娃</p><p><img src="/2022/11/13/guiling/%E8%BA%AB%E5%90%8E%E8%BF%98%E8%83%8C%E7%9D%80%E4%B8%AA%E8%83%96%E5%A8%83%E5%A8%83.jpg" alt="身后还背着个胖娃娃"></p><p><img src="/2022/11/13/guiling/%E7%A5%9D%E7%A6%8F%E7%A5%9D%E7%A6%8F.jpg" alt="祝福祝福"></p><h1 id="龙胜梯田"><a href="#龙胜梯田" class="headerlink" title="龙胜梯田"></a>龙胜梯田</h1><p>第一次见到梯田，一年中不同的季节都会有不同的景观，我到时是刚灌上水的时候，阳光洒下来很漂亮</p><p><img src="/2022/11/13/guiling/%E6%A2%AF%E7%94%B01.jpg" alt="梯田1"></p><p><img src="/2022/11/13/guiling/%E6%A2%AF%E7%94%B02.jpg" alt="梯田2"></p><p><img src="/2022/11/13/guiling/%E6%A2%AF%E7%94%B03.jpg" alt="梯田3"></p><p><img src="/2022/11/13/guiling/%E6%A2%AF%E7%94%B04.jpg" alt="梯田4"></p><p>织布的老奶奶</p><p><img src="/2022/11/13/guiling/%E7%BB%87%E5%B8%83%E7%9A%84%E8%80%81%E5%A5%B6%E5%A5%B6.jpg" alt="织布的老奶奶"></p><p><img src="/2022/11/13/guiling/%E6%A2%AF%E7%94%B0%E4%B8%8A.jpg" alt="梯田上"></p><p><img src="/2022/11/13/guiling/%E7%9D%A1%E8%A7%89%E7%9A%84%E6%87%92%E7%8B%97.jpg" alt="睡觉的懒狗"></p><p><img src="/2022/11/13/guiling/%E8%BF%9B%E5%8F%A3%E7%8B%97.jpg" alt="进口狗"></p><p>一只进口的美国狗，一到晚上就精神，严格遵守美国时间</p><p><img src="/2022/11/13/guiling/%E5%86%AC%E7%9C%A0%E7%9A%84%E6%87%92%E7%8B%97.jpg" alt="冬眠的懒狗"></p><p>下山时候下了雨，小心翼翼还是摔了跤，然后一旁的大爷穿着草鞋淡定的走过</p><p><img src="/2022/11/13/guiling/%E5%81%A5%E6%AD%A5%E5%A6%82%E9%A3%9E%E7%9A%84%E5%BD%93%E5%9C%B0%E4%BA%BA.jpg" alt="健步如飞的当地人"></p><h1 id="好吃的和不好吃的…"><a href="#好吃的和不好吃的…" class="headerlink" title="好吃的和不好吃的….."></a>好吃的和不好吃的…..</h1><p>刚到桂林就直奔螺狮粉，好吃~</p><p><img src="/2022/11/13/guiling/%E4%B9%85%E9%97%BB%E5%A4%A7%E5%90%8D%E7%9A%84%E8%9E%BAxi%E7%B2%89.jpg" alt="久闻大名的螺xi粉"></p><p>车站随便一家粉都很好吃，先干拌，再喝汤</p><p><img src="/2022/11/13/guiling/%E7%B2%89.jpg" alt="粉"></p><p>去吃了椿记烧鹅，教练，我要吃十个</p><p><img src="/2022/11/13/guiling/%E6%A4%BF%E8%AE%B0%E7%83%A7%E9%B9%85.jpg" alt="椿记烧鹅"></p><p><img src="/2022/11/13/guiling/%E6%A4%BF%E8%AE%B0%E7%83%A7%E9%B9%852.jpg" alt="椿记烧鹅2"></p><p>跑去吃了特色油茶，果然接受不了</p><p><img src="/2022/11/13/guiling/%E6%B2%B9%E8%8C%B6.jpg" alt="油茶"></p><p><img src="/2022/11/13/guiling/%E6%A1%82%E8%8A%B1%E7%B3%95.jpg" alt="桂花糕"></p><p><img src="/2022/11/13/guiling/%E6%A1%82%E8%8A%B1%E7%B3%951.jpg" alt="桂花糕1"></p><p>第一次吃清补凉，真不错，感觉我能喝十碗….</p><p><img src="/2022/11/13/guiling/%E6%B8%85%E8%A1%A5%E5%87%89.jpg" alt="清补凉"></p>]]></content>
    
    
    <categories>
      
      <category>所见</category>
      
      <category>2021.5 广西之旅</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>北海北~</title>
    <link href="/2022/11/12/beihai/"/>
    <url>/2022/11/12/beihai/</url>
    
    <content type="html"><![CDATA[<h1 id="第一次看海"><a href="#第一次看海" class="headerlink" title="第一次看海"></a>第一次看海</h1><p>​21年第一次看到了海！</p><p>​早晨四点多就出发，想看一看海边的日出，却没想到第一次见识了海边天气的多变，天没亮的的时候白茫茫一片，分不清海的界限。</p><p><img src="/2022/11/12/beihai/%E6%B8%85%E6%99%A8%E7%9A%84%E5%8C%97%E6%B5%B7.jpg" alt="清晨的北海"></p><p>![隐约看得到阳光 却隐藏着风暴](隐约看得到阳光 却隐藏着风暴.jpg)</p><p>​几分钟之后见识到了人生中最大的雷雨之一，但是雷雨过后天气很快放晴，之后的几天里天气都不错（除了有点晒-。-），然后就提着我湿透的鞋开心的上涠洲岛了！</p><p><img src="/2022/11/12/beihai/%E5%A4%A7%E9%9B%A8%E5%A4%A7%E9%9B%A8%E5%A4%A7%E9%9B%A8.jpg" alt="大雨大雨大雨"></p><p>​一下船看到海的时候很震惊，原来海真的是蓝色的</p><p><img src="/2022/11/12/beihai/%E6%B5%B7%E5%8E%9F%E6%9D%A5%E7%9C%9F%E7%9A%84%E6%98%AF%E8%93%9D%E7%9A%84.jpg" alt="海原来真的是蓝的"></p><p><img src="/2022/11/12/beihai/%E6%B6%A0%E6%B4%B2%E5%B2%9B%E8%93%9D%E6%A1%A5.jpg" alt="涠洲岛蓝桥"></p><p><img src="/2022/11/12/beihai/%E6%B6%A0%E6%B4%B2%E5%B2%9B%E5%A0%A4%E5%9D%9D.jpg" alt="涠洲岛堤坝"></p><p>​安顿好后租了个小电驴在岛上到处晃悠，看到了很多堤坝、还有一个超长的桥，可惜好像已经废弃了，特别有感觉。</p><p><img src="/2022/11/12/beihai/%E5%B0%8F%E5%B8%86%E8%88%B9.jpg" alt="小帆船"></p><p><img src="/2022/11/12/beihai/%E5%B0%8F%E8%88%B9.jpg" alt="小船"></p><p><img src="/2022/11/12/beihai/%E5%B0%8F%E7%A0%B4%E8%88%B9.jpg" alt="小破船"></p><p>​海边不能没有船，就像西方不能没有耶路撒冷，小狗不能没有骨头！</p><p>​还看到了很多礁石，各种奇形怪状的石头，还挺壮观的</p><p><img src="/2022/11/12/beihai/%E7%A4%81%E7%9F%B3.jpg" alt="礁石"></p><p><img src="/2022/11/12/beihai/%E7%A4%81%E7%9F%B31.jpg" alt="礁石1"></p><p><img src="/2022/11/12/beihai/%E7%A4%81%E7%9F%B32-1668271094894-13.jpg" alt="礁石2"></p><p>​为了省15块钱走了好远路才看到的饿晕湾，不对，鳄鱼湾！</p><p><img src="/2022/11/12/beihai/%E9%B3%84%E9%B1%BC%E6%B9%BE.jpg" alt="鳄鱼湾"></p><p>​还有很多奇奇怪怪的海湾？海滩？有点分不清楚</p><p><img src="/2022/11/12/beihai/%E4%B8%8D%E7%9F%A5%E9%81%93%E4%BB%80%E4%B9%88%E6%B9%BE.jpg" alt="不知道什么湾"></p><p><img src="/2022/11/12/beihai/%E6%B5%B7%E6%BB%A9.jpg" alt="海滩"></p><p><img src="/2022/11/12/beihai/%E6%B5%B71.jpg" alt="海1"></p><p><img src="/2022/11/12/beihai/%E8%A5%BF%E8%BE%B9%E7%9A%84%E4%B8%80%E4%B8%AA%E6%B5%B7%E6%BB%A9.jpg" alt="西边的一个海滩"></p><p>今晚先写到这里，睡觉了</p><hr><h1 id="日升日落"><a href="#日升日落" class="headerlink" title="日升日落"></a>日升日落</h1><p>海边的日落很美很美很美很美</p><p><img src="/2022/11/12/beihai/%E6%97%A5%E8%90%BD1.jpg" alt="日落1"></p><p><img src="/2022/11/12/beihai/%E6%97%A5%E8%90%BD2.jpg" alt="日落2"></p><p><img src="/2022/11/12/beihai/%E6%97%A5%E8%90%BD4.jpg" alt="日落4"></p><p><img src="/2022/11/12/beihai/%E6%97%A5%E8%90%BD5.jpg" alt="日落5"></p><p><img src="/2022/11/12/beihai/%E6%97%A5%E8%90%BD6.jpg" alt="日落6"></p><p>运气很好，遇到了两队情侣在海边举行婚礼，真浪漫</p><p><img src="/2022/11/12/beihai/%E5%A9%9A%E7%A4%BC.jpg" alt="婚礼"></p><p><img src="/2022/11/12/beihai/%E4%B8%80%E8%B5%B7%E7%9C%8B%E6%B5%B7.jpg" alt="一起看海"></p><p>第二天又早早的去了五彩滩看了日出</p><p><img src="/2022/11/12/beihai/%E6%97%A5%E5%87%BA1.jpg" alt="日出1"></p><p><img src="/2022/11/12/beihai/%E6%97%A5%E5%87%BA2.jpg" alt="日出2"></p><p><img src="/2022/11/12/beihai/%E5%A4%AA%E9%98%B3%E5%8D%B3%E5%B0%86%E5%8D%87%E8%B5%B7.jpg" alt="太阳即将升起"></p><p><img src="/2022/11/12/beihai/%E4%BA%94%E5%BD%A9%E6%BB%A9.jpg" alt="五彩滩"></p><p><img src="/2022/11/12/beihai/%E4%BA%94%E5%BD%A9%E6%BB%A91.jpg" alt="五彩滩1"></p><p><img src="/2022/11/12/beihai/%E7%9C%8B%E6%97%A5%E5%87%BA%E7%9A%84%E4%BA%BA%E4%BB%AC.jpg" alt="看日出的人们"></p><h1 id="教堂、老街"><a href="#教堂、老街" class="headerlink" title="教堂、老街"></a>教堂、老街</h1><p>北海有很多很漂亮的建筑，去了岛上的教堂</p><p><img src="/2022/11/12/beihai/%E5%A4%A9%E4%B8%BB%E6%95%99%E5%A0%82.jpg" alt="天主教堂"></p><p><img src="/2022/11/12/beihai/%E6%95%99%E5%A0%82.jpg" alt="教堂"></p><p>北海的老街</p><p><img src="/2022/11/12/beihai/%E8%80%81%E8%A1%971.jpg" alt="老街1"></p><p><img src="/2022/11/12/beihai/%E8%80%81%E8%A1%972.jpg" alt="老街2"></p><p><img src="/2022/11/12/beihai/%E8%80%81%E8%A1%973.jpg" alt="老街3"></p><p><img src="/2022/11/12/beihai/%E7%AA%97%E5%8F%A3.jpg" alt="窗口"></p><h1 id="吃吃吃"><a href="#吃吃吃" class="headerlink" title="吃吃吃"></a>吃吃吃</h1><p>最后怎么能少得了好吃的，北方人终于能体验到海鲜自由</p><p><img src="/2022/11/12/beihai/%E5%8C%97%E6%B5%B7%E7%9A%84%E6%B5%B7%E9%B2%9C.jpg" alt="北海的海鲜"></p><p>民宿老板指引来当当地的海鲜市场（避开了宰人市场-。-），海鲜又便宜又好吃，感觉是目前吃过最好吃的一次</p><p><img src="/2022/11/12/beihai/%E6%B6%A0%E6%B4%B2%E5%B2%9B%E8%87%AA%E5%B7%B1%E5%8A%A0%E5%B7%A5%E7%9A%84%E6%B5%B7%E9%B2%9C.jpg" alt="涠洲岛自己加工的海鲜"></p><p>海岛上到处都有人售卖的小香蕉，5块钱就能买到两大把，还很好吃，走到哪都要买一把无脑购。临走前新认识的大哥经过砍价最终以5块钱4把的价格带走了满满两袋，真狠啊。但是当我后来得知岛上的鸡之所以叫香蕉鸡就是因为是吃这种香蕉长大的时候感觉心情很复杂，哈哈。</p><p><img src="/2022/11/12/beihai/%E5%B0%8F%E9%A6%99%E8%95%89.jpg" alt="小香蕉"></p><p>老街的虾饼，坐车的时候竟然遇到了毕业已久的学姐 -。-，世界真小啊</p><p><img src="/2022/11/12/beihai/%E8%99%BE%E9%A5%BC.jpg" alt="虾饼"></p><p>小冯推荐的肠卷和绿豆海带味的糖水，超级好喝</p><p><img src="/2022/11/12/beihai/%E8%82%A0%E5%8D%B7.jpg" alt="肠卷"></p><p><img src="/2022/11/12/beihai/%E7%BB%BF%E8%B1%86%E6%B5%B7%E5%B8%A6%E7%9A%84%E7%B3%96%E6%B0%B4.jpg" alt="绿豆海带的糖水"></p>]]></content>
    
    
    <categories>
      
      <category>所见</category>
      
      <category>2021.5 广西之旅</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
